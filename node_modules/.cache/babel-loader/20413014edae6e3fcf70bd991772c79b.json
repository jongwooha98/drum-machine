{"ast":null,"code":"var _jsxFileName = \"/Users/jongwooha98/React/drum-machine/src/App.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.scss';\nimport drumSoundData from './drumSoundData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass DrumPad extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleKeyDown = e => {\n      console.log(e.key);\n\n      if (e.keyCode === this.props.value.charCodeAt()) {\n        document.getElementById(`${this.props.value}`).classList.add('active');\n        this.handleClick();\n      }\n    };\n\n    this.handleKeyUp = e => {\n      document.getElementById(`${this.props.value}`).classList.remove('active');\n    };\n\n    this.handleClick = () => {\n      this.audio.play();\n      this.audio.currentTime = 0;\n      this.props.handleDisplay(this.props.id);\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.handleKeyDown);\n    document.addEventListener('keyup', this.handleKeyUp);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handleKeyDown);\n    document.addEventListener('keyup', this.handleKeyUp);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: this.props.id,\n      className: \"drum-pad\",\n      onClick: this.handleClick,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        id: this.props.value,\n        className: \"drum-pad__button\",\n        children: this.props.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        className: \"clip\",\n        src: this.props.src,\n        ref: ref => this.audio = ref,\n        children: [\"Your browser does not support the\", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"audio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), \" element.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDisplay = display => {\n      this.setState({\n        display: display\n      });\n    };\n\n    this.state = {\n      display: 'Click or Press Key to Play'\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"drum-machine\",\n      id: \"drum-machine\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Drum Machine\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"display\",\n        id: \"display\",\n        children: this.state.display\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"drum-pad__container\",\n        children: drumSoundData.map((d, index) => /*#__PURE__*/_jsxDEV(DrumPad, {\n          id: d.id,\n          value: d.value,\n          src: d.src,\n          handleDisplay: this.handleDisplay\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 91,\n  columnNumber: 17\n}, this), document.getElementById('root'));\nexport default App;","map":{"version":3,"sources":["/Users/jongwooha98/React/drum-machine/src/App.js"],"names":["React","ReactDOM","drumSoundData","DrumPad","Component","handleKeyDown","e","console","log","key","keyCode","props","value","charCodeAt","document","getElementById","classList","add","handleClick","handleKeyUp","remove","audio","play","currentTime","handleDisplay","id","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","render","src","ref","App","constructor","display","setState","state","map","d","index"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.scss';\nimport drumSoundData from './drumSoundData';\n\nclass DrumPad extends React.Component {\n  componentDidMount() {\n    document.addEventListener('keydown', this.handleKeyDown);\n    document.addEventListener('keyup', this.handleKeyUp);\n  }\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handleKeyDown);\n    document.addEventListener('keyup', this.handleKeyUp);\n  }\n\n  handleKeyDown = (e) => {\n    console.log(e.key);\n    if (e.keyCode === this.props.value.charCodeAt()) {\n      document.getElementById(`${this.props.value}`).classList.add('active');\n      this.handleClick();\n    }\n  };\n\n  handleKeyUp = (e) => {\n    document.getElementById(`${this.props.value}`).classList.remove('active');\n  };\n\n  handleClick = () => {\n    this.audio.play();\n    this.audio.currentTime = 0;\n\n    this.props.handleDisplay(this.props.id);\n  };\n\n  render() {\n    return (\n      <div id={this.props.id} className=\"drum-pad\" onClick={this.handleClick}>\n        <button id={this.props.value} className=\"drum-pad__button\">\n          {this.props.value}\n        </button>\n        <audio\n          className=\"clip\"\n          src={this.props.src}\n          ref={(ref) => (this.audio = ref)}\n        >\n          Your browser does not support the\n          <code>audio</code> element.\n        </audio>\n      </div>\n    );\n  }\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      display: 'Click or Press Key to Play',\n    };\n  }\n\n  handleDisplay = (display) => {\n    this.setState({\n      display: display,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"drum-machine\" id=\"drum-machine\">\n        <h1>Drum Machine</h1>\n        <div className=\"display\" id=\"display\">\n          {this.state.display}\n        </div>\n        <div className=\"drum-pad__container\">\n          {drumSoundData.map((d, index) => (\n            <DrumPad\n              key={index}\n              id={d.id}\n              value={d.value}\n              src={d.src}\n              handleDisplay={this.handleDisplay}\n            />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}