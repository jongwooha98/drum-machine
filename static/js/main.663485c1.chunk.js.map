{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["data","id","value","src","DrumPad","handleKeyDown","e","console","log","key","keyCode","props","charCodeAt","handleClick","audio","play","currentTime","handleDisplay","document","addEventListener","this","removeEventListener","className","onClick","ref","React","Component","App","display","setState","state","map","d","ReactDOM","render","getElementById","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"+OAAe,I,YCKTA,EAAO,CACX,CACEC,GAAI,WACJC,MAAO,IACPC,IAAK,4DAEP,CACEF,GAAI,WACJC,MAAO,IACPC,IAAK,4DAEP,CACEF,GAAI,WACJC,MAAO,IACPC,IAAK,4DAEP,CACEF,GAAI,aACJC,MAAO,IACPC,IAAK,8DAEP,CACEF,GAAI,aACJC,MAAO,IACPC,IAAK,8DAEP,CACEF,GAAI,gBACJC,MAAO,IACPC,IAAK,iEAEP,CACEF,GAAI,eACJC,MAAO,IACPC,IAAK,gEAEP,CACEF,GAAI,YACJC,MAAO,IACPC,IAAK,2DAEP,CACEF,GAAI,SACJC,MAAO,IACPC,IAAK,2DAMHC,E,4MAUJC,cAAgB,SAACC,GACfC,QAAQC,IAAIF,EAAEG,KACXH,EAAEI,UAAW,EAAKC,MAAMT,MAAMU,cAC/B,EAAKC,e,EAKTA,YAAc,WACZ,EAAKC,MAAMC,OACX,EAAKD,MAAME,YAAc,EAEzB,EAAKL,MAAMM,cAAc,EAAKN,MAAMV,K,uDApBtC,WACEiB,SAASC,iBAAiB,UAAWC,KAAKf,iB,kCAE5C,WACEa,SAASG,oBAAoB,UAAWD,KAAKf,iB,oBAmB/C,WAAU,IAAD,OACP,OACE,sBACEJ,GAAImB,KAAKT,MAAMV,GACfqB,UAAU,WACVC,QAASH,KAAKP,YAHhB,UAKE,iCACGO,KAAKT,MAAMT,QAEd,wBACED,GAAImB,KAAKT,MAAMT,MACfoB,UAAU,OACVnB,IAAKiB,KAAKT,MAAMR,IAChBqB,IAAK,SAAAA,GAAG,OAAI,EAAKV,MAAQU,GAJ3B,8CAME,yCANF,sB,GAnCcC,IAAMC,WAgDtBC,E,kDACJ,WAAYhB,GAAQ,IAAD,8BACjB,cAAMA,IAMRM,cAAgB,SAACW,GACf,EAAKC,SAAS,CACZD,QAASA,KAPX,EAAKE,MAAQ,CACXF,QAAS,8BAHM,E,0CAanB,WAAU,IAAD,OACP,OACE,sBAAK3B,GAAG,eAAR,UACE,qBAAKA,GAAG,UAAR,SAAmBmB,KAAKU,MAAMF,UAC9B,8BACC5B,EAAK+B,KAAI,SAAAC,GAAC,OACT,cAAC,EAAD,CACE/B,GAAI+B,EAAE/B,GACNC,MAAO8B,EAAE9B,MACTC,IAAK6B,EAAE7B,IACPc,cAAe,EAAKA,4B,GAxBdQ,IAAMC,WAiCxBO,IAASC,OAAO,cAAC,EAAD,IAAShB,SAASiB,eAAe,SAKlCR,QCjIAS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdJ,IAASC,OACP,cAAC,IAAMW,WAAP,UACE,cAAC,EAAD,MAEF3B,SAASiB,eAAe,SAM1BC,M","file":"static/js/main.663485c1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport logo from './logo.svg';\nimport './App.css';\n\nconst data = [\n  {\n    id: \"Heater 1\",\n    value: \"Q\",\n    src: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3\",  \n  },\n  {\n    id: \"Heater 2\",\n    value: \"W\",\n    src: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3\",\n  },\n  {\n    id: \"Heater 3\",\n    value: \"E\",\n    src: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3\",\n  },\n  {\n    id: \"Kick n Hat\",\n    value: \"A\",\n    src: \"https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3\",\n  },\n  {\n    id: \"RP4 KICK 1\",\n    value: \"S\",\n    src: \"https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3\",\n  },\n  {\n    id: \"Punchy Kick 1\",\n    value: \"D\",\n    src: \"https://s3.amazonaws.com/freecodecamp/drums/punchy_kick_1.mp3\",\n  },\n  {\n    id: \"Side Stick 1\",\n    value: \"Z\",\n    src: \"https://s3.amazonaws.com/freecodecamp/drums/side_stick_1.mp3\",\n  },\n  {\n    id: \"Brk Snare\",\n    value: \"X\",\n    src: \"https://s3.amazonaws.com/freecodecamp/drums/Brk_Snr.mp3\",\n  },\n  {\n    id: \"Bld H1\",\n    value: \"C\",\n    src: \"https://s3.amazonaws.com/freecodecamp/drums/Bld_H1.mp3\",\n  },  \n]\n\n\n\nclass DrumPad extends React.Component {  \n  \n  componentDidMount() {\n    document.addEventListener(\"keydown\", this.handleKeyDown)\n  }\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.handleKeyDown)\n\n  }\n  \n  handleKeyDown = (e) => {\n    console.log(e.key)\n    if(e.keyCode=== this.props.value.charCodeAt()) {\n      this.handleClick()\n\n    }\n  }\n  \n  handleClick = () => {\n    this.audio.play()\n    this.audio.currentTime = 0\n\n    this.props.handleDisplay(this.props.id)\n  }\n  \n  render() {\n    return(\n      <div \n        id={this.props.id}\n        className=\"drum-pad\"  \n        onClick={this.handleClick}\n        >        \n        <button>\n          {this.props.value}\n        </button>\n        <audio \n          id={this.props.value}\n          className=\"clip\"\n          src={this.props.src} \n          ref={ref => this.audio = ref}>\n          Your browser does not support the\n          <code>audio</code> element.\n        </audio>\n      </div>\n    )\n  }\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      display: \"Click or Press Key to Play\"\n    }\n  }\n  \n  handleDisplay = (display) => {\n    this.setState({\n      display: display\n    })\n  }\n  \n  render() {\n    return(\n      <div id=\"drum-machine\">\n        <div id=\"display\">{this.state.display}</div>\n        <div>\n        {data.map(d => (\n          <DrumPad \n            id={d.id}\n            value={d.value}\n            src={d.src}\n            handleDisplay={this.handleDisplay}\n            />\n        ))}\n        </div>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}